<template>
  <BaseContainer navTitle="校园卡充值">
    <view slot="qy-content">
      <view class="container">
        <view class="head-bg">
          <view class="head-bg-title">账户余额（元）</view>
          <view class="head-bg-remain">{{accountBalance}}</view>
        </view>
        <view class="main-container">
          <view class="pay-account">充值账号：{{sno}}</view>
          <view class="pay-way">支付方式：银行卡绑定校园卡</view>
          <view class="quick-pay-container">
            <view class="quick-pay-item" @tap.stop="fastPay" data-charge="50">50元</view>
            <view class="quick-pay-item" @tap.stop="fastPay" data-charge="100">100元</view>
            <view class="quick-pay-item" @tap.stop="fastPay" data-charge="200">200元</view>
            <view class="quick-pay-item" @tap.stop="fastPay" data-charge="300">300元</view>
          </view>
          <view class="list">
            <view class="list-item-quick">
              <view class="list-item-text item">充值金额</view>
              <input
                class="list-item-text input"
                type="digit"
                @input="put"
                value="{{charge}}"
                placeholder="可输入1-300元整数金额"
                placeholder-style="font-size:30rpx;color:#888888"
                cursor-spacing="130"
              >
            </view>
          </view>
          <button
            @tap.stop="openPayModal"
            class="enter-button {{(charge==='' || charge === 'NAN' || charge === NAN || !charge) ? 'button-click' : ''}}"
            hover-class="button-click"
            disabled="{{(charge==='' || charge === 'NAN' || charge === NAN || !charge)?true:false}}"
          >确认充值{{(charge && charge !== '') ? ' ¥' + charge : ''}}</button>
        </view>
        <PayFlow
          :open.sync="isPayModalOpen"
          :charge.sync="charge"
          type="card"
          payWay="银行卡绑定校园卡"
          operateContent="校园卡/银行卡转账"
        />
      </view>
    </view>
  </BaseContainer>
</template>

<script>
import wepy from "wepy";
import PayFlow from "../components/pay-flow";
import { campusCardRequestInfo } from "@/api/campusCard";
import { mockCampusCardRequestInfo } from "@/mock/campusCard";
import JudgeStatus from "@/mixins/module";
import BaseContainer from "@/components/baseContainer";
import { connect } from "wepy-redux";

@connect({
  graduateIdentity(state) {
    return state.graduateReducer.graduateIdentity;
  }
})
export default class CampusCardCharge extends wepy.page {
  data = {
    accountBalance: 0, // 账户余额
    cardBalance: 0, //  卡内余额
    transitionBalance: 0, //  过度余额
    charge: "",
    // isPageUp: false, // 控制输入时按钮不被遮挡
    isPayModalOpen: false,
    sno: "",
    visitorModeStatus: false
  };
  components = {
    PayFlow,
    BaseContainer
  };
  mixins = [JudgeStatus];
  config = {
    navigationBarTitleText: "校园卡充值",
    enablePullDownRefresh: true
  };
  onLoad(op) {
    this.visitorModeStatus = this.$com.BaseContainer.visitorModeStatus;
    this.judgeStatus(op.name).then(() => {
      if (!this.visitorModeStatus) {
        const moduleStatus = wepy.getStorageSync("moduleStatus")[0].open;
        if (!moduleStatus) {
          // 一卡通维护中
          wepy.redirectTo({
            url: "../../others-page/pages/close"
          });
        }
      }
      this.getRemain();
    });
  }
  async getRemain() {
    let yktInfoCache = wepy.getStorageSync("yktInfo");
    const fromYktIndex =
      getCurrentPages().findIndex(
        page => page.route === "campus-card-page/pages/campus-card-index"
      ) !== -1;
    if (!fromYktIndex || !yktInfoCache || !yktInfoCache.data) {
      const { data: balance } = !this.visitorModeStatus
        ? await campusCardRequestInfo(this.graduateIdentity)
        : await mockCampusCardRequestInfo();
      yktInfoCache = { data: balance.data, time: new Date() };
      wepy.setStorageSync("yktInfo", yktInfoCache);
    }
    const { data: balance } = yktInfoCache;
    this.accountBalance = this.graduateIdentity
      ? (Number(balance.db_balance) + Number(balance.unset_balance)) / 100
      : (Number(balance.db_balance) + Number(balance.unsettle_amount)) / 100;
    this.cardBalance = balance.db_balance / 100;
    this.sno = balance.sno;
    this.$apply();
  }
  async onPullDownRefresh() {
    await this.getRemain();
    wepy.stopPullDownRefresh();
    wepy.showToast({
      title: "刷新成功",
      icon: "success",
      duration: 1000
    });
  }
  methods = {
    showWhy() {
      wepy.showModal({
        content: "过度余额多度余额xxxxxx",
        confirmText: "知道了",
        showCancel: false,
        confirmColor: "#47CFF5"
      });
    },
    closePayModal() {
      this.isPayModalOpen = false;
    },
    pageUp() {
      this.isPageUp = true;
    },
    noPageUp() {
      this.isPageUp = false;
    },
    put(e) {
      const value = Number(e.detail.value);
      this.putCharge(value);
    },
    fastPay(e) {
      const value = Number(e.target.dataset.charge);
      this.putCharge(value);
      this.openPayModal();
    },
    openPayModal() {
      // 校验
      if (this.visitorModeStatus) {
        this.charge = "";
        return this.$invoke("BaseContainer", "showVisitorTips");
      }
      if (!isNaN(this.charge) && this.charge > 0) {
        this.isPayModalOpen = true; // 输入密码
      } else {
        wepy
          .showModal({
            content: "金额错误",
            confirmText: "知道了",
            showCancel: false,
            confirmColor: "#353535"
          })
          .then(res => {
            this.charge = "";
          });
      }
    }
  };
  openPayModal() {
    // 校验
    if (this.visitorModeStatus) {
      this.charge = "";
      return this.$invoke("BaseContainer", "showVisitorTips");
    }
    if (!isNaN(this.charge) && this.charge > 0) {
      this.isPayModalOpen = true; // 输入密码
    } else {
      wepy
        .showModal({
          content: "金额错误",
          confirmText: "知道了",
          showCancel: false,
          confirmColor: "#353535"
        })
        .then(res => {
          this.charge = "";
        });
    }
  }
  events = {
    closePayModal: () => {
      this.isPayModalOpen = false;
      this.$apply();
    }
  };
  putCharge(number) {
    this.charge = number;
  }
}
</script>

<style lang="stylus" scoped>
.container
  display flex
  flex-direction column
  margin-top 38rpx
  .head-bg
    background-image url('https://static.airbob.org/under-graduate/campus-card/card.png')
    width 100%
    height 243rpx
    background-size cover
    margin 0 auto
    display flex
    flex-direction column
    text-align center
    color #fff
    .head-bg-title
      margin-top 45rpx
      height 40rpx
      line-height 40rpx
      font-size 28rpx
      font-family PingFangSC-Regular
    .head-bg-remain
      font-size 80rpx
      font-family PingFangSC-Medium
      height 112rpx
      line-height 112rpx
  .main-container
    margin 50rpx 35rpx 0 35rpx
    font-family PingFangSC-Regular
    .pay-account
      font-family PingFangSC-Medium
      color #353535
      height 45rpx
      line-height 45rpx
      font-size 32rpx
    .pay-way
      font-size 24rpx
      margin-top 9rpx
      height 33rpx
      line-height 33rpx
      color #888888
    .quick-pay-container
      display flex
      justify-content space-between
      margin-top 50rpx
      .quick-pay-item
        height 100rpx
        width 150rpx
        border-radius 10rpx
        border 1rpx solid #47cff5
        color #47cff5
        font-family PingFangSC-Medium
        font-size 36rpx
        line-height 100rpx
        text-align center
        &:hover
          background-color #47cff5
          color #fff
    .list
      margin-top 60rpx
      font-size 30rpx
      color #353535
      font-family PingFangSC-Regular
      .list-item
        display flex
        align-items center
        position relative
        .why
          position absolute
          width 30rpx
          border-radius 50%
          top 21rpx
          left 167rpx
        & + .list-item
          border-top 2rpx solid #E3E3E3
        .list-item-text
          margin 0rpx 0 15rpx 0
          &:first-of-type
            margin-left 34rpx
            margin-right 100rpx
      .list-item-quick
        display flex
        align-items center
        border-bottom 2rpx solid #E3E3E3
        .money-list
          display flex
          align-items center
          .money-item
            border-radius 60rpx
            width 93rpx
            height 45rpx
            line-height 45rpx
            color #47CFF5
            text-align center
            border 2rpx solid #47CFF5
            margin-right 30rpx
        .input
          z-index auto
        .list-item-text
          display flex
          margin 15rpx 0
          &.item
            width 177rpx
          &.input
            width 500rpx
          &:first-of-type
            color #353535
  .enter-button
    background #47cff5
    border-radius 100rpx
    width 100%
    height 85rpx
    line-height 85rpx
    color rgb(255, 255, 255)
    margin-top 60rpx
    &:after
      border 0
  .button-click
    background-image none
    background-color #D0F5FF
</style>

