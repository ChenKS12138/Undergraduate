<template>
  <BaseContainer :navTitle="navTitle">
    <view slot="qy-content" class="container">
      <view class="content">
        <view class="toggle-body {{centerBody}}">
          <view hidden="{{!isFromLogin}}" class="content-body">
            <view class="container-main">
              <view class="input-container">
                <image mode="widthFix" class="input-image" src="https://static.airbob.org/under-graduate/image/png/login/phone.png"/>
                <input type="number" class="input" @input="bindPhone" placeholder="请输入手机号" maxlength="11"/>
              </view>
              <view class="input-container">
                <image mode="widthFix" class="input-image" src="https://static.airbob.org/under-graduate/image/png/login/verification.png"/>
                <input type="number" class="input" @input="bindVerificationCode" placeholder="请输入验证码" maxlength="6"/>
                <button class="input-after {{flag ? 'btn-disabled':''}}" @tap="getVerificationCode">{{verticationMsg}}</button>
              </view>
              <view class="login-btn" @tap="handleVerificationCode">下一步</view>
            </view>
          </view>
          <view hidden="{{!isFromLogin}}" class="content-body">
            <view class="container-main">
              <view class="input-container">
                <image mode="widthFix" class="input-image" src="https://static.airbob.org/under-graduate/%E5%AF%86%E7%A0%81.png"/>
                <input type="password" @input="bindPassword" class="input" placeholder="请输入新的小程序密码" />
              </view>
              <view class="input-container">
                <image mode="widthFix" class="input-image" src="https://static.airbob.org/under-graduate/%E5%AF%86%E7%A0%81.png"/>
                <input type="password" @input="bindPassword2" class="input" placeholder="请再次输入新的小程序密码" />
              </view>
              <view class="login-btn {{disableChange?'disabled-btn':''}}" @tap="handlePasswordChange">确认更新密码</view>
            </view>
          </view>
          <view hidden="{{isFromLogin}}" class="content-body">
            <view class="container-main">
              <view class="input-container">
                <image mode="widthFix" class="input-image" src="https://static.airbob.org/under-graduate/%E5%AF%86%E7%A0%81.png"/>
                <input type="password" @input="bindPasswordOld" class="input" placeholder="请输入旧的小程序密码" />
              </view>
              <view class="input-container">
                <image mode="widthFix" class="input-image" src="https://static.airbob.org/under-graduate/%E5%AF%86%E7%A0%81.png"/>
                <input type="password" @input="bindPassword" class="input" placeholder="请输入新的小程序密码" />
              </view>
              <view class="login-btn {{disableUpdate?'disabled-btn':''}}" @tap="handlePasswordUpdate">确认更新密码</view>
            </view>
          </view>
          <view class="content-body">
            <view class="container-main">
              <view class="success-container">
                <view class="image-container"></view>
                <view class="change-success">修改成功^-^</view>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </BaseContainer>
</template>
<script>
import wepy from "wepy";
import BaseContainer from "@/components/baseContainer";
import {
  sendSmsAtForgetPassword,
  checkCaptchaAtForgetPassword,
  modifyPasswordAtForgetPassword,
  modifyPasswordByOldPassword
} from "@/api/password";

export default class ChangePhone extends wepy.page {
  components = {
    BaseContainer
  };
  data = {
    step: 0,
    verticationMsg: "获取验证码",
    passwordOld: "",
    zfPassword: "",
    zfPassword2: "",
    phoneNumber: "",
    flag: false,
    vertication: "",
    isFromLogin: false
  };
  methods = {
    async getVerificationCode() {
      if (this.phoneNumber && this.phoneNumber.trim().length) {
        if (!this.flag) {
          this.flag = true;
          let count = 60;
          this.verticationMsg = "请求中";
          this.$apply();
          wepy.showLoading({
            title: "请求中",
            mask: true
          });
          const { data } = await sendSmsAtForgetPassword(this.phoneNumber);
          wepy.hideLoading();
          if (data && data.data) {
            this.verticationMsg = `60s`;
            this.$apply();
            let t = setInterval(() => {
              this.verticationMsg = `${--count}s`;
              if (count === 0) {
                clearInterval(t);
                this.verticationMsg = "获取验证码";
                this.flag = false;
              }
              this.$apply();
            }, 1000);
          } else {
            this.flag = false;
            this.verticationMsg = "获取验证码";
            this.$apply();
            if (data.errCode !== 1601) {
              this.$parent.showTip("不知道为什么失败了呢～");
            }
          }
        }
      } else {
        this.$parent.showTip("手机号不能为空");
      }
    },
    async handleVerificationCode() {
      if (
        this.phoneNumber &&
        this.phoneNumber.trim().length &&
        this.vertication &&
        this.vertication.length
      ) {
        wepy.showLoading({
          title: "验证手机验证码中~",
          mask: true
        });
        const { data } = await checkCaptchaAtForgetPassword(
          this.vertication,
          this.phoneNumber
        );
        wepy.hideLoading();
        if (data && data.data) {
          this.step++;
          this.$apply();
        } else {
          this.$parent.showTip("验证码错误");
        }
      } else {
        this.$parent.showTip("手机号和验证码不能为空");
      }
    },
    async handlePasswordChange() {
      if (!this.disableChange && this.zfPassword && this.zfPassword.length) {
        wepy.showLoading({
          title: "修改密码中~",
          mask: true
        });
        const { data } = await modifyPasswordAtForgetPassword(
          this.zfPassword,
          this.phoneNumber
        );
        wepy.hideLoading();
        if (data && data.data) {
          this.step++;
          this.$apply();
        } else {
          this.$parent.showTip("不知道为什么失败了呢～");
        }
      }
    },
    async handlePasswordUpdate() {
      if (!this.disableUpdate) {
        wepy.showLoading({
          title: "修改密码中...",
          mask: true
        });
        const { data } = await modifyPasswordByOldPassword(
          this.passwordOld,
          this.zfPassword
        );
        wepy.hideLoading();
        if (data && data.data) {
          this.step++;
          this.$apply();
          this.$parent.showTip("即将跳转至登录页");
          setTimeout(() => {
            wepy.reLaunch({ url: "../login" });
          }, 800);
        } else {
          this.$parent.showTip("不知道为什么失败了呢～");
        }
      }
    },
    bindPhone(e) {
      this.phoneNumber = e.detail.value;
    },
    bindVerificationCode(e) {
      this.vertication = e.detail.value;
    },
    bindPassword(e) {
      this.zfPassword = e.detail.value;
    },
    bindPassword2(e) {
      this.zfPassword2 = e.detail.value;
    },
    bindPasswordOld(e) {
      this.passwordOld = e.detail.value;
    }
  };
  computed = {
    centerBody() {
      switch (this.step) {
        case 0:
          return "zf-step";
        case 1:
          return "sms-step";
        case 2:
          return "success-step";
        default:
          return "zf-step";
      }
    },
    disableChange() {
      if (
        this.zfPassword &&
        this.zfPassword2 &&
        this.zfPassword.length &&
        this.zfPassword2.length
      ) {
        return this.zfPassword !== this.zfPassword2;
      } else {
        return true;
      }
    },
    disableUpdate() {
      if (
        this.zfPassword &&
        this.passwordOld &&
        this.zfPassword.length &&
        this.passwordOld.length
      ) {
        return this.zfPassword === this.passwordOld;
      } else {
        return true;
      }
    },
    navTitle() {
      return this.isFromLogin ? "修改小程序密码" : "找回小程序密码";
    }
  };
  onLoad() {
    // 如果是来自登录页则是忘记密码，否则是修改密码
    const LOGIN_ROUTE = "others-page/pages/login";
    this.isFromLogin = getCurrentPages().some(x => x.route === LOGIN_ROUTE);
  }
}
</script>
<style lang="stylus" scoped>
.content
  display flex
  flex-direction column
  width 100vw
  height 100%
  z-index 0
  overflow hidden
.toggle-body
  display flex
  width 300vw
  transition all 0.5s
.zf-step
  transform translateX(0vw)
.sms-step
  transform translateX(-100vw)
.success-step
  transform translateX(-200vw)
.container
  display flex
  align-items center
  min-height 90vh
  .content-body
    width 100vw
    .container-main
      height 100%
      display flex
      flex-direction column
      justify-content center
    .success-container
      display flex
      justify-content center
      align-items center
      flex-wrap wrap
      .image-container
        width 750rpx
        height 148rpx
        background-image url('https://static.airbob.org/under-graduate/%E6%88%90%E5%8A%9F.png')
        background-size contain
        background-position center
        background-repeat no-repeat
      .change-success
        width 750rpx
        text-align center
        font-family PingFangSC-Regular
        font-size 36rpx
        margin-top 32rpx
        color #888888
    .login-btn
      height 74rpx
      width 586rpx
      margin 90rpx auto 40rpx
      line-height 74rpx
      color #fff
      font-size 32rpx
      text-align center
      border-radius 50rpx
      background linear-gradient(45deg, #abdcff 0%, #6ae4ff 100%)
    .disabled-btn
      background #cacaca !important
    .input-container
      display flex
      width 586rpx
      margin 10rpx auto 30rpx
      padding-bottom 6rpx
      border-bottom 1rpx solid #F2F2F2
      align-items center
      .input-image
        width 26rpx
        height 40rpx
        margin-right 20rpx
      .input
        font-size 28rpx
        flex 1
      .input-after
        width 160rpx
        height 45rpx
        margin-left 20rpx
        padding 0
        background linear-gradient(-225deg, #ABDCFF 0%, #6AE4FF 100%)
        color #fff
        font-size 24rpx
        line-height 45rpx
        text-align center
        border-radius 30rpx
        &:after
          border 0
.btn-disabled
  background #D0F5FF !important
</style>

